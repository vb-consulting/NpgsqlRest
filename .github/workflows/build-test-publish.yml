name: Build, Test, Publish and Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  CLIENT_VERSION: v2.27.1
  LIBRARY_VERSION: v2.32.0

# Add workflow-level permissions
permissions:
  contents: write
  packages: read

jobs:
  build-test-publish:
    runs-on: ubuntu-22.04
    steps:
    - name: Install PosgtreSQL
      uses: vb-consulting/postgresql-action@v1
      with:
        postgresql version: '17'
        postgresql user: 'postgres'
        postgresql password: 'postgres'
    - uses: actions/checkout@v4  # Updated from v2
    - name: Setup .NET9
      uses: actions/setup-dotnet@v4  # Updated from v1
      with:
        dotnet-version: 9.0.x
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity m
    - name: Publish
      run: dotnet nuget push **\*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{secrets.NUGET_API_KEY}} --skip-duplicate

  create-release:
    needs: build-test-publish
    runs-on: ubuntu-22.04
    # Explicit permissions for this job
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.LIBRARY_VERSION }}-client-${{ env.CLIENT_VERSION }}
        release_name: "AOT Client ${{ env.CLIENT_VERSION }} NpgsqlRest ${{ env.LIBRARY_VERSION }}"
        draft: false
        prerelease: false

  upload-assets:
    needs: create-release
    runs-on: ubuntu-22.04
    # Explicit permissions for this job
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Updated from v2

    - name: Upload appsettings.json to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./NpgsqlRestClient/appsettings.json
        asset_name: appsettings.json
        asset_content_type: application/json

  build-windows:
    needs: create-release
    runs-on: windows-2022
    # Explicit permissions for this job
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4  # Updated from v2
    - name: Setup .NET9
      uses: actions/setup-dotnet@v4  # Updated from v1
      with:
        dotnet-version: 9.0.x
    - name: Build Windows AOT
      run: dotnet publish ./NpgsqlRestClient/NpgsqlRestClient.csproj -r win-x64 -c Release
    - name: Upload Windows executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./NpgsqlRestClient/bin/Release/net9.0/win-x64/publish/NpgsqlRestClient.exe
        asset_name: npgsqlrest-win64.exe
        asset_content_type: application/octet-stream

  build-linux:
    needs: create-release
    runs-on: ubuntu-22.04
    # Explicit permissions for this job
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4  # Updated from v2
    - name: Setup .NET9
      uses: actions/setup-dotnet@v4  # Updated from v1
      with:
        dotnet-version: 9.0.x
    - name: Build Linux AOT
      run: dotnet publish ./NpgsqlRestClient/NpgsqlRestClient.csproj -r linux-x64 -c Release
    - name: Upload Linux executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./NpgsqlRestClient/bin/Release/net9.0/linux-x64/publish/NpgsqlRestClient
        asset_name: npgsqlrest-linux64
        asset_content_type: application/octet-stream

  build-macos:
    needs: create-release
    runs-on: macos-latest
    # Explicit permissions for this job
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4  # Updated from v2
    - name: Setup .NET9
      uses: actions/setup-dotnet@v4  # Updated from v1
      with:
        dotnet-version: 9.0.x
    - name: Build macOS ARM64 AOT
      run: dotnet publish ./NpgsqlRestClient/NpgsqlRestClient.csproj -r osx-arm64 -c Release
    - name: Upload macOS executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./NpgsqlRestClient/bin/Release/net9.0/osx-arm64/publish/NpgsqlRestClient  # Fixed path
        asset_name: npgsqlrest-osx-arm64
        asset_content_type: application/octet-stream
  
  build-docker:
    needs: build-linux
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./docker
        push: true
        platforms: linux/amd64
        provenance: false
        tags: |
          vbilopav/npgsqlrest:${{ env.CLIENT_VERSION }}
          vbilopav/npgsqlrest:latest

  npm-publish:
    needs: create-release
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
    - name: Change to npm directory and publish
      working-directory: ./npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}